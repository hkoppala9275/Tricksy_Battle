import random

class Card:
    # Represents a single playing card with suit and rank
    # Provides a numeric value for comparison based on rank
    SUITS = ['Hearts', 'Diamonds', 'Clubs', 'Spades']
    RANKS = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'Ace']
    # Map '2'->2 through 'Ace'->14
    VALUE_MAP = {rank: i+2 for i, rank in enumerate(RANKS)}

def __init__(self, suit, rank):
        # Initialize card with given suit and rank, set its numeric value
        self.suit = suit
        self.rank = rank
        self.value = Card.VALUE_MAP[rank]

def __str__(self):
        # Human-readable representation, e.g., "Queen of Hearts"
        return f"{self.rank} of {self.suit}"

def __repr__(self):
        # Debug representation matches str()
        return str(self)

class Deck:
    # Represents a 48-card deck (Kings removed)
    # Supports shuffling, dealing, and drawing
    def __init__(self):
        # Create and shuffle the deck
        self.cards = [Card(s, r) for s in Card.SUITS for r in Card.RANKS]
        random.shuffle(self.cards)

    def deal(self, n):
        # Deal n cards from the top of the deck
        return [self.cards.pop() for _ in range(n)]
    
    def draw(self):
        # Reveal one card (pop from deck) or None if empty
        return self.cards.pop() if self.cards else None

class Player:
    # Represents a game player with a name and hand of cards
    def __init__(self, name):
        self.name = name
        # List of cards objects
        self.hand = []
